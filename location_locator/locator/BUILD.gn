# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/appexecfwk/standard/appexecfwk.gni")

SUBSYSTEM_DIR = "//base/location"
LOCATION_SERVICE_ROOT = "$SUBSYSTEM_DIR/services"

ohos_shared_library("lbsservice_locator") {
  sources = [
    "$SUBSYSTEM_DIR/location_locator/callback/source/adapter_callback_skeleton.cpp",
    "$SUBSYSTEM_DIR/location_locator/callback/source/locator_callback_proxy.cpp",
    "$SUBSYSTEM_DIR/location_locator/callback/source/switch_callback_proxy.cpp",
    "$SUBSYSTEM_DIR/location_locator/callback/source/gnss_status_callback_proxy.cpp",
    "$SUBSYSTEM_DIR/location_locator/callback/source/nmea_message_callback_proxy.cpp",
    "$SUBSYSTEM_DIR/location_locator/callback/source/cached_locations_callback_proxy.cpp",
    "$SUBSYSTEM_DIR/location_locator/locator/source/fusion_controller.cpp",
    "$SUBSYSTEM_DIR/location_locator/locator/source/locator_ability.cpp",
    "$SUBSYSTEM_DIR/location_locator/locator/source/locator_background_proxy.cpp",
    "$SUBSYSTEM_DIR/location_locator/locator/source/locator_event_manager.cpp",
    "$SUBSYSTEM_DIR/location_locator/locator/source/locator_event_subscriber.cpp",
    "$SUBSYSTEM_DIR/location_locator/locator/source/locator_skeleton.cpp",
    "$SUBSYSTEM_DIR/location_locator/locator/source/report_manager.cpp",
    "$SUBSYSTEM_DIR/location_locator/locator/source/request.cpp",
    "$SUBSYSTEM_DIR/location_locator/locator/source/request_manager.cpp",
    "$SUBSYSTEM_DIR/location_locator/locator/source/subability_common.cpp",
    "$SUBSYSTEM_DIR/location_locator/locator/source/work_record.cpp",
    "$SUBSYSTEM_DIR/utils/source/common_utils.cpp",
    "$SUBSYSTEM_DIR/utils/source/common_hisysevent.cpp",
  ]

  include_dirs = [
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "$SUBSYSTEM_DIR/interfaces/innerkits/locator_standard/include",
    "$SUBSYSTEM_DIR/location_locator/callback/include",
    "$SUBSYSTEM_DIR/location_common/common/include",
    "$SUBSYSTEM_DIR/location_geocode/geocode/include",
    "$SUBSYSTEM_DIR/location_gnss/gnss/include",
    "$SUBSYSTEM_DIR/location_locator/locator/include",
    "$SUBSYSTEM_DIR/location_network/network/include",
    "$SUBSYSTEM_DIR/location_passive/passive/include",
    "$LOCATION_SERVICE_ROOT/visibility/include",
    "$SUBSYSTEM_DIR/utils/include",
    "$SUBSYSTEM_DIR/adapter/services/include",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk/",
    "${aafwk_path}/interfaces/innerkits/want/include",
    "${aafwk_path}/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
    "//foundation/aafwk/intent/interfaces/innerkits/base/include",
    "//foundation/appexecfwk/adapter/interfaces/innerkits/appexecfwk_base/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler/include",
    "//foundation/aafwk/standard/interfaces/innerkits/base/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base/include",
    "//base/notification/ces_standard/frameworks/core/include",
    "//base/notification/ces_standard/interfaces/innerkits/native/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/include",
    "//foundation/resourceschedule/backgroundtaskmanager/interfaces/innerkits/native/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include"
  ]

  deps = [
    "$SUBSYSTEM_DIR/location_common/common:lbsservice_common",
    "//base/location/interfaces/innerkits/locator_standard:locator_sdk",
    "${aafwk_path}/interfaces/innerkits/base:base",
    "${aafwk_path}/interfaces/innerkits/want:want",
    "//utils/native/base:utils",
    "//foundation/ace/napi:ace_napi",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//base/notification/ces_standard/frameworks/core:cesfwk_core",
    "//base/notification/ces_standard/frameworks/native:cesfwk_innerkits",
    "//base/startup/syspara_lite/interfaces/innerkits/native/syspara:syspara",
  ]

  external_deps = [
    "ipc:ipc_core",
    "ces_standard:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "hisysevent_native:libhisysevent",
    "samgr_standard:samgr_proxy",
    "startup_l2:syspara",
    "permission_standard:libpermissionsdk_standard",
    "access_token:libaccesstoken_sdk",
  ]

  part_name = "location_locator"
  subsystem_name = "location"
}
