# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#####################hydra-fuzz###################
import("//base/location/config.gni")
import("//build/config/features.gni")
import("//build/test.gni")

##############################fuzztest##########################################
ohos_fuzztest("GnssFuzzTest") {
  module_out_path = "location/location"
  fuzz_config_file = "$LOCATION_ROOT_DIR/test/fuzztest/locator/gnss_fuzzer"
  include_dirs = [
    "$LOCATION_GNSS_ROOT/include",
    "$LOCATION_LOCATOR_ROOT/include",
    "$LOCATION_ROOT_DIR/interfaces/inner_api/include",
  ]
  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]
  sources = [ "gnss_fuzzer.cpp" ]
  deps = [
    "$LOCATION_GNSS_ROOT:lbsservice_gnss_static",
    "$LOCATION_LOCATOR_ROOT:lbsservice_locator_static",
    "$LOCATION_ROOT_DIR/frameworks/js/napi:geolocation_static",
    "$LOCATION_ROOT_DIR/frameworks/location_common/common:lbsservice_common_static",
    "$LOCATION_ROOT_DIR/frameworks/native/geofence_sdk:geofence_sdk_static",
    "$LOCATION_ROOT_DIR/frameworks/native/locator_sdk:locator_sdk_static",
  ]
  external_deps = [
    "ability_runtime:ability_connect_callback_stub",
    "napi:ace_napi",
    "safwk:system_ability_fwk",
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "core_service:tel_core_service_api",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "init:libbegetutil",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  defines = []

  if (telephony_core_service_enable) {
    external_deps += [ "core_service:tel_core_service_api" ]
    defines += [ "TEL_CORE_SERVICE_ENABLE" ]
  }

  if (telephony_cellular_data_enable) {
    external_deps += [ "cellular_data:tel_cellular_data_api" ]
    defines += [ "TEL_CELLULAR_DATA_ENABLE" ]
  }

  if (hdf_drivers_interface_location_agnss_enable) {
    external_deps +=
        [ "drivers_interface_location_agnss:liblocation_agnss_proxy_2.0" ]
    defines += [ "HDF_DRIVERS_INTERFACE_AGNSS_ENABLE" ]
  }

  if (location_feature_with_gnss &&
      hdf_drivers_interface_location_gnss_enable) {
    external_deps +=
        [ "drivers_interface_location_gnss:liblocation_gnss_proxy_2.0" ]
    defines += [ "FEATURE_GNSS_SUPPORT" ]
  }

  if (hdf_drivers_interface_location_geofence_enable) {
    external_deps +=
        [ "drivers_interface_location_geofence:liblocation_geofence_proxy_2.0" ]
    defines += [ "HDF_DRIVERS_INTERFACE_GEOFENCE_ENABLE" ]
  }

  if (location_feature_with_passive) {
    defines += [ "FEATURE_PASSIVE_SUPPORT" ]
  }
  if (notification_distributed_notification_service_enable) {
    defines += [ "NOTIFICATION_ENABLE" ]
  }
}

###############################################################################
group("fuzztest") {
  testonly = true
  deps = []
  deps += [
    # deps file
    ":GnssFuzzTest",
  ]
}
###############################################################################
