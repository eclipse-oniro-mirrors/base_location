# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/location/config.gni")
import("//build/test.gni")

module_output_path = "location/service"

if (location_feature_with_passive) {
  PASSIVE_UNIT_TEST_DIR = "$LOCATION_ROOT_DIR/test/location_passive"
  ohos_unittest("PassiveAbilityTest") {
    module_out_path = module_output_path
    sources = [
      "$LOCATION_ROOT_DIR/test/mock/src/mock_service_registry.cpp",
      "$PASSIVE_UNIT_TEST_DIR/source/passive_ability_stub_test.cpp",
      "$PASSIVE_UNIT_TEST_DIR/source/passive_ability_test.cpp",
    ]

    include_dirs = [
      "$LOCATION_ROOT_DIR/interfaces/inner_api/include",
      "$PASSIVE_UNIT_TEST_DIR/include",
      "$PASSIVE_UNIT_TEST_DIR/mock/include",
      "$SUBSYSTEM_DIR/location_locator/locator/include",
      "$SUBSYSTEM_DIR/location_passive/passive/include",
    ]

    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
      blocklist = "./../../cfi_blocklist.txt"
    }
    branch_protector_ret = "pac_ret"

    deps = [
      "$ARKUI_ROOT_DIR/napi:ace_napi",
      "$GOOGLE_TEST_DIR:gmock_main",
      "$GOOGLE_TEST_DIR:gtest_main",
      "$IPC_ROOT_DIR/interfaces/innerkits/ipc_core:ipc_core",
      "$LOCATION_ROOT_DIR/frameworks/location_common/common:lbsservice_common",
      "$LOCATION_ROOT_DIR/frameworks/native:locator_sdk",
      "$SAMGR_ROOT_DIR/safwk/interfaces/innerkits/safwk:system_ability_fwk",
      "$SAMGR_ROOT_DIR/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
      "$SECURITY_ROOT_DIR/access_token/interfaces/innerkits/nativetoken:libnativetoken",
      "$SECURITY_ROOT_DIR/access_token/interfaces/innerkits/token_setproc:libtoken_setproc",
      "$START_UP_ROOT_DIR/init/interfaces/innerkits:libbegetutil",
      "$SUBSYSTEM_DIR/location_locator/locator:lbsservice_locator",
      "$SUBSYSTEM_DIR/location_passive/passive:lbsservice_passive",
    ]

    external_deps = [
      "access_token:libaccesstoken_sdk",
      "c_utils:utils",
      "common_event_service:cesfwk_innerkits",
      "eventhandler:libeventhandler",
      "hilog:libhilog",
      "hisysevent:libhisysevent",
      "init:libbegetutil",
      "ipc:ipc_core",
      "safwk:system_ability_fwk",
    ]

    defines = []
    if (location_feature_with_passive) {
      defines += [ "FEATURE_PASSIVE_SUPPORT" ]
    }

    module_out_path = module_output_path
  }
} else {
  ohos_unittest("PassiveAbilityTest") {
    module_out_path = module_output_path
  }
}

group("unittest") {
  testonly = true
  deps = []

  deps += [ ":PassiveAbilityTest" ]
}
