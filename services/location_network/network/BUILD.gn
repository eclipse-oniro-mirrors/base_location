# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

import("//base/location/config.gni")
import("//build/ohos.gni")

local_base_sources = [
  "$LOCATION_LOCATOR_ROOT/source/location_config_manager.cpp",
  "$LOCATION_LOCATOR_ROOT/source/subability_common.cpp",
  "$LOCATION_LOCATOR_ROOT/source/work_record.cpp",
  "$LOCATION_NETWORK_ROOT/source/network_ability.cpp",
  "$LOCATION_NETWORK_ROOT/source/network_ability_skeleton.cpp",
  "$LOCATION_NETWORK_ROOT/source/network_callback_host.cpp",
]

if (location_feature_with_network) {
  ohos_shared_library("lbsservice_network") {
    sources = local_base_sources

    include_dirs = [
      "$LOCATION_ROOT_DIR/interfaces/inner_api/include",
      "$LOCATION_LOCATOR_ROOT/include",
      "$LOCATION_NETWORK_ROOT/include",
    ]

    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
    }
    branch_protector_ret = "pac_ret"

    deps = [
      "$LOCATION_ROOT_DIR/frameworks/base_module:lbsbase_module",
      "$LOCATION_ROOT_DIR/frameworks/location_common/common:lbsservice_common",
    ]

    external_deps = [
      "ability_base:want",
      "ability_runtime:ability_manager",
      "eventhandler:libeventhandler",
      "ffrt:libffrt",
      "hilog:libhilog",
      "ipc:ipc_single",
      "safwk:system_ability_fwk",
    ]

    defines = []

    ldflags = [
      "-Wl,--as-needed",
      "-Wl,--gc-sections",
    ]

    cflags_cc = [
      "-ffunction-sections",
      "-fdata-sections",
      "-Os",
    ]

    if (location_feature_with_network) {
      defines += [ "FEATURE_NETWORK_SUPPORT" ]
    }

    if (location_feature_with_passive) {
      defines += [ "FEATURE_PASSIVE_SUPPORT" ]
    }

    if (location_hicollie_enable) {
      external_deps += [ "hicollie:libhicollie" ]
      defines += [ "LOCATION_HICOLLIE_ENABLE" ]
    }

    # Used to control the export of dynamic library symbols.
    version_script = "liblbsservice_network_version_script.txt"

    part_name = "location"
    subsystem_name = "location"
  }

  ohos_static_library("lbsservice_network_static") {
    sources = local_base_sources

    include_dirs = [
      "$LOCATION_ROOT_DIR/interfaces/inner_api/include",
      "$LOCATION_LOCATOR_ROOT/include",
      "$LOCATION_NETWORK_ROOT/include",
    ]

    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
    }
    branch_protector_ret = "pac_ret"

    deps = [
      "$LOCATION_ROOT_DIR/frameworks/base_module:lbsbase_module",
      "$LOCATION_ROOT_DIR/frameworks/location_common/common:lbsservice_common",
    ]

    external_deps = [
      "ability_base:want",
      "ability_runtime:ability_manager",
      "eventhandler:libeventhandler",
      "ffrt:libffrt",
      "hilog:libhilog",
      "ipc:ipc_single",
      "safwk:system_ability_fwk",
    ]

    defines = []
    if (location_feature_with_network) {
      defines += [ "FEATURE_NETWORK_SUPPORT" ]
    }

    if (location_feature_with_passive) {
      defines += [ "FEATURE_PASSIVE_SUPPORT" ]
    }

    if (location_hicollie_enable) {
      external_deps += [ "hicollie:libhicollie" ]
      defines += [ "LOCATION_HICOLLIE_ENABLE" ]
    }

    part_name = "location"
    subsystem_name = "location"
  }
} else {
  ohos_shared_library("lbsservice_network") {
    part_name = "location"
    subsystem_name = "location"
  }

  ohos_static_library("lbsservice_network_static") {
    part_name = "location"
    subsystem_name = "location"
  }
}
