# Copyright (C) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//build/ohos.gni")
import("//build/ohos/taihe_idl/taihe.gni")
import("//base/location/location/config.gni")

copy_taihe_idl("copy_cryptoFramework") {
    sources = [ "./idl/ohos.geoLocationManager.taihe" ]
}
subsystem_name = "location"
part_name = "location"
taihe_generated_file_path = "$taihe_file_path/out/$subsystem_name/$part_name"
ohos_taihe("run_taihe") {
  taihe_generated_file_path = "$taihe_generated_file_path"
  deps = [ ":copy_cryptoFramework" ]
  outputs = [
    "$taihe_generated_file_path/src/ohos.geoLocationManager.ani.cpp",
    "$taihe_generated_file_path/src/ohos.geoLocationManager.abi.c",
  ]
}
taihe_shared_library("location_framework_taihe_native") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  taihe_generated_file_path = "$taihe_generated_file_path"
  part_name = "$part_name"
  subsystem_name = "$subsystem_name"
  sources = get_target_outputs(":run_taihe")
  include_dirs = [
    "$LOCATION_ROOT_DIR/frameworks/ets/taihe/locator_sdk/include",
    "$LOCATION_ROOT_DIR/interfaces/inner_api/include",
  ]

  sources += [
    "src/ani_constructor.cpp",
    "src/bluetooth_scan_result_callback_taihe.cpp",
    "src/country_code_callback_taihe.cpp",
    "src/gnss_status_callback_taihe.cpp",
    "src/location_callback_taihe.cpp",
    "src/location_switch_callback_taihe.cpp",
    "src/locating_required_data_callback_taihe.cpp",
    "src/location_error_callback_taihe.cpp",
    "src/nmea_message_callback_taihe.cpp",
    "src/ohos.geoLocationManager.impl.cpp",
    "src/util.cpp",
  ]
  deps = [
    ":run_taihe",
    "$LOCATION_ROOT_DIR/frameworks/base_module:lbsbase_module",
    "$LOCATION_ROOT_DIR/frameworks/location_common/common:lbsservice_common",
    "$LOCATION_ROOT_DIR/frameworks/native/locator_sdk:locator_sdk",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "i18n:intl_util",
    "ipc:ipc_single",
  ]
}
generate_static_abc("location_framework_abc") {
  base_url = "$taihe_generated_file_path"
  files = [ "$taihe_generated_file_path/@ohos.geoLocationManager.ets" ]
  is_boot_abc = "True"
  device_dst_file = "/system/framework/location_framework_abc.abc"
  dependencies = [ ":run_taihe" ]
}

ohos_prebuilt_etc("location_framework_etc") {
  source = "$target_out_dir/location_framework_abc.abc"           
  module_install_dir = "framework"
  part_name = "$part_name"
  subsystem_name = "$subsystem_name"
  deps = [ ":location_framework_abc" ]
}
group("locationframework_taihe") {
  deps = [
    ":location_framework_etc",
    ":location_framework_taihe_native",
  ]
}